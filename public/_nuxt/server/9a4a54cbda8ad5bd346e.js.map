{"version":3,"file":"9a4a54cbda8ad5bd346e.js","sources":["webpack:///./src/pages/marketplace/cart/payment.vue"],"sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport OptionButtons from '@/components/OptionButtons'\nimport VueTailwindModal from '@/components/VueTailwindModal'\nimport { mapGetters } from 'vuex'\nimport SevenElevenLogo from '~/assets/images/7-eleven.png'\nimport GCashLogo from '~/assets/images/gcash.png'\n\nexport default {\n  layout: 'marketplace',\n  components: {\n    OptionButtons,\n    VueTailwindModal\n  },\n  created() {\n    if(!this.$storage.getLocalStorage('order_id')){\n      this.$router.replace('/marketplace/cart')\n      return\n    }\n    this.isLoading = false\n    this.paymentOption = _.first(\n      _.filter(this.paymentOptions, ({ disabled }) => !disabled)\n    ).value\n  },\n  mounted() {\n    window.onbeforeunload = e => {\n      e = e || window.event\n      // For IE and Firefox prior to version 4\n      if (e) {\n        e.returnValue = 'Sure?'\n      }\n      // For Safari\n      return 'Sure?'\n    }\n  },\n  destroyed(){\n    window.onbeforeunload = null\n  },\n  data() {\n    return {\n      isReceived: false,\n      isLoading: true,\n      paymentOption: null,\n      paymentOptions: [\n        {\n          icon: 'credit-card',\n          label: 'Credit or Debit Card',\n          value: 'card',\n          disabled: true\n        },\n        {\n          icon: 'university',\n          label: 'Online Banking',\n          value: 'bank',\n          disabled: true\n        },\n        {\n          image: SevenElevenLogo,\n          label: '7-Eleven',\n          value: '711',\n          disabled: true\n        },\n        {\n          icon: 'truck',\n          label: 'Cash on Delivery',\n          value: 'COD'\n        },\n        {\n          image: GCashLogo,\n          label: 'GCASH',\n          value: 'gcash',\n          disabled: true\n        }\n      ]\n    }\n  },\n  methods: {\n    async placeOrder() {\n      this.isLoading = true\n      const order = this.$storage.getLocalStorage('order_id')\n      await this.$store.dispatch('marketplace/placeOrder', {orderId: order, paymentMethod: this.paymentOption})\n      this.$storage.removeLocalStorage('order_id')\n      this.isReceived = true\n      this.isLoading = false\n    }\n  }\n}\n"],"mappings":"AAAA","sourceRoot":""}