{"version":3,"file":"e6e9ac24d48b609d6c58.js","sources":["webpack:///./src/pages/marketplace/collections/_collectionId/products/_id.vue"],"sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VueNumericInput from '@/components/VueNumericInput'\nimport ProductsGrid from '@/components/ProductsGrid'\nimport ZoomOnHover from '@/components/ZoomOnHover/index'\nimport VueTailwindModal from '@/components/VueTailwindModal'\nimport BreadCrumbs from '@/components/BreadCrumbs'\nimport ColorRegulator from '~/plugins/color-regulator'\nimport { mapGetters } from 'vuex'\n\nexport default {\n  layout: 'marketplace',\n  components: {\n    ProductsGrid,\n    VueNumericInput,\n    ZoomOnHover,\n    VueTailwindModal,\n    BreadCrumbs\n  },\n  async mounted() {\n    this.product = await this.$store.dispatch(\n      'marketplace/getProductFromCollection',\n      {\n        collection: this.$route.params.collectionId,\n        product: this.$route.params.id\n      }\n    )\n    this.selectedVariant = _.first(this.product.variants)\n    this.selectedSize = _.first(\n      _.filter(\n        _.keys(this.selectedVariant.sizes),\n        k => this.selectedVariant.sizes[k].quantity\n      )\n    )\n    this.thumbnails = _.map(this.product.variants, 'thumbnails')\n    this.sides = _.keys(this.selectedVariant.thumbnails)\n    this.selectedSide = this.frontOrFirst\n    this.isLoading = false\n  },\n  data() {\n    return {\n      isLoading: true,\n      product: null,\n      selectedVariant: null,\n      selectedSize: null,\n      thumbnails: [],\n      sides: [],\n      selectedThumbnailIndex: 0,\n      selectedSide: null,\n      otherCollectionProducts: [\n        {\n          id: 1,\n          name: 'Printree T-Shirt',\n          collectionName: 'Printree Uniforms',\n          price: 499,\n          thumbnail:\n            'https://user-images.githubusercontent.com/2805249/64069899-8bdaa180-cc97-11e9-9b19-1a9e1a254c18.png'\n        },\n        {\n          id: 2,\n          name: 'Printree T-Shirt',\n          collectionName: 'Printree Uniforms',\n          price: 499,\n          thumbnail:\n            'https://user-images.githubusercontent.com/2805249/64069899-8bdaa180-cc97-11e9-9b19-1a9e1a254c18.png'\n        },\n        {\n          id: 3,\n          name: 'Printree T-Shirt',\n          collectionName: 'Printree Uniforms',\n          price: 499,\n          thumbnail:\n            'https://user-images.githubusercontent.com/2805249/64069899-8bdaa180-cc97-11e9-9b19-1a9e1a254c18.png'\n        },\n        {\n          id: 4,\n          name: 'Printree T-Shirt',\n          collectionName: 'Printree Uniforms',\n          price: 499,\n          thumbnail:\n            'https://user-images.githubusercontent.com/2805249/64069899-8bdaa180-cc97-11e9-9b19-1a9e1a254c18.png'\n        }\n      ],\n      quantity: 1,\n      selectedColor: '#ffffff',\n      isAddingToCart: false\n    }\n  },\n  computed: {\n    ...mapGetters({\n      'isLoggedIn': 'user/isLoggedIn',\n      'user': 'user/user'\n    }),\n    frontOrFirst() {\n      return _.includes(this.sides, 'front') ? 'front' : this.sides[0]\n    }\n  },\n  methods: {\n    async addToCart() {\n      if(!this.isLoggedIn){\n        document.getElementById('get-started-btn').click()\n        return\n      }\n      if(this.isAddingToCart) return\n      this.isAddingToCart = true\n      const item = {\n        variant: this.selectedVariant,\n        quantity: this.quantity,\n        size: this.selectedSize\n      }\n      await this.$store.dispatch('marketplace/addToCartOf', {\n        item,\n        user: this.user\n      })\n      this.$toast.success('This item has been added to your cart successfully.', {\n        position: 'bottom'\n      })\n      this.isAddingToCart = false\n    },\n    getContrastOf(color) {\n      return ColorRegulator.getContrastOf(color)\n    },\n    selectVariant(variant) {\n      this.selectedVariant = variant\n      this.sides = _.keys(variant.thumbnails)\n      this.selectedSize = _.first(\n        _.filter(_.keys(variant.sizes), k => variant.sizes[k].quantity)\n      )\n      this.selectedSide = this.frontOrFirst\n    }\n  }\n}\n"],"mappings":"AAAA","sourceRoot":""}